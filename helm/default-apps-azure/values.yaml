clusterName: ""
organization: ""

userConfig:
  certManager:
    configMap:
      values:
        # cert-manager's DNS01 solver by default tries to reach authoritative nameservers directly, using
        # their public IPs. Since those are not reachable from private clusters, we instead rely on the
        # recursive nameserver
        #
        # For public clusters, this setting should have no effect, as they can use the HTTP01 solver.
        dns01RecursiveNameserversOnly: true
        ciliumNetworkPolicy:
          enabled: true
  etcdKubernetesResourceCountExporter:
    configMap:
      values:
        etcd:
          hostPath: "/etc/kubernetes/pki/etcd/"
          cacertpath: "/certs/ca.crt"
          certpath: "/certs/server.crt"
          keypath: "/certs/server.key"
          prefix: "/registry/"
        events:
          prefix: "/registry/events/"
  external-dns:
    configMap:
      values:
        flavor: capi
        provider: azure
        clusterID: "{{ .Values.clusterName }}"
        crd:
          install: false
        domainFilters:
          - "{{ .Values.baseDomain }}"
        txtOwnerId: giantswarm-io-external-dns
        txtPrefix: "{{ .Values.clusterName }}"
        sources:
          - service
        extraVolumes:
          - name: azure-config-file
            hostPath:
              path: /etc/kubernetes
        extraVolumeMounts:
          - name: azure-config-file
            mountPath: /etc/kubernetes
            readOnly: true
  observabilityBundle:
    configMap:
      values: |
        userConfig:
          kubePrometheusStack:
            configMap:
              values:
                global:
                  rbac:
                    pspEnabled: true
                kube-prometheus-stack:
                  grafana:
                    rbac:
                      pspEnabled: true
                  kube-state-metrics:
                    podSecurityPolicy:
                      enabled: true
                  prometheus-node-exporter:
                    rbac:
                      pspEnabled: true
          prometheusAgent:
            configMap:
              values:
                prometheus-agent:
                  psp:
                    enabled: true
          promtail:
            configMap:
              values:
                promtail:
                  rbac:
                    pspEnabled: true

apps:
  certExporter:
    appName: cert-exporter
    chartName: cert-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cert-exporter
    version: 2.9.0
  certManager:
    appName: cert-manager
    chartName: cert-manager-app
    catalog: default
    clusterValues:
      configMap: true
      secret: true
    forceUpgrade: false
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cert-manager-app
    version: 3.6.1
  chartOperatorExtensions:
    appName: chart-operator-extensions
    chartName: chart-operator-extensions
    catalog: default
    enabled: true
    clusterValues:
      configMap: false
      secret: false
    dependsOn: prometheus-operator-crd
    namespace: giantswarm
    # used by renovate
    # repo: giantswarm/chart-operator-extensions
    version: 1.1.1
  etcdKubernetesResourceCountExporter:
    appName: etcd-k8s-res-count-exporter
    chartName: etcd-kubernetes-resources-count-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: false
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/etcd-kubernetes-resources-count-exporter
    version: 1.8.0
  external-dns:
    appName: external-dns
    chartName: external-dns-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/external-dns-app
    version: 2.42.0
  metricsServer:
    appName: metrics-server
    chartName: metrics-server-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/metrics-server-app
    version: 2.4.2
  netExporter:
    appName: net-exporter
    chartName: net-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/net-exporter
    version: 1.18.1
  nodeExporter:
    appName: node-exporter
    chartName: node-exporter-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/node-exporter-app
    version: 1.18.1
  observabilityBundle:
    appName: observability-bundle
    chartName: observability-bundle
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: false
    inCluster: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/observability-bundle
    version: 1.0.0
  securityBundle:
    appName: security-bundle
    chartName: security-bundle
    catalog: giantswarm
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: false
    inCluster: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/security-bundle
    version: 1.5.0
  teleport-kube-agent:
    appName: teleport-kube-agent
    chartName: teleport-kube-agent
    catalog: default
    clusterValues:
      configMap: true
      secret: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/teleport-kube-agent-app
    version: 0.7.0
    # a list of extraConfigs for the App,
    # It can be secret or configmap
    # https://github.com/giantswarm/rfc/tree/main/multi-layer-app-config#example
    # NOTE: This configMap will be created by teleport-operator
    extraConfigs:
      - kind: configMap
        name: "{{ $.Values.clusterName }}-teleport-kube-agent-config"
        namespace: "{{ $.Release.Namespace }}"
  vpa:
    appName: vertical-pod-autoscaler
    chartName: vertical-pod-autoscaler-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    forceUpgrade: false
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/vertical-pod-autoscaler-app
    version: 4.6.0
